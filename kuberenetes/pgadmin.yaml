apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin-config
data:
  servers.json: |
    {
      "Servers": {
        "1": {
          "Name": "PostgreSQL DB",
          "Group": "Servers",
          "Port": "5432",
          "Username": "postgres",
          "Host": "postgres-postgresql.default.svc.cluster.local",
          "SSLMode": "prefer",
          "MaintenanceDB": "postgres"
        }
      }
    }

---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin-service
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
  selector:
    app: pgadmin
  type: NodePort
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pgadmin
spec:
  serviceName: pgadmin-service
  podManagementPolicy: Parallel
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: pgadmin
          image: dpage/pgadmin4:6.2
          imagePullPolicy: IfNotPresent
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: user@domain.com
            - name: PGADMIN_DEFAULT_PASSWORD
              value: password
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: pgadmin-config
              mountPath: /pgadmin4/servers.json
              subPath: servers.json
              readOnly: true
      volumes:
        - name: pgadmin-config
          configMap:
            name: pgadmin-config
  volumeClaimTemplates:
  - metadata:
      name: pgadmin-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 3Gi
         
