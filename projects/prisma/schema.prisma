// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id             String        @id @default(uuid())
  createdAt      DateTime      @default(now())
  ecosystem      EcosystemName
  name           String
  homepage       String?
  summary        String?
  description    String?
  git            String?
  first_release  DateTime?
  latest_release DateTime?
  latest_version String?
  Release        Release[]
  Dependancy     Dependency[]
  last_synced    DateTime?

  @@map("projects")
}

model Release {
  id             String    @id @default(uuid())
  project_id     String
  project        Project   @relation(fields: [project_id], references: [id])
  version        String
  major          Int?
  minor          Int?
  patch          Int?
  prerelease     Boolean?
  suffix         String?
  released       DateTime?
  summary        String?
  description    String?
  sha            String?
  license        String?
  download_count Int?

  Dependency Dependency[]
  @@map("releases")
}

model Lockfile {
  id          String        @id @default(uuid())
  file_type   LockfileType
  ecosystem   EcosystemName
  name        String
  valid       Boolean?
  parsed      Boolean       @default(false)
  data        String // Sigh
  uploadedAt  DateTime?
  processedAt DateTime?
  Dependency  Dependency[]

  @@map("lockfiles")
}

model Dependency {
  id             String    @id @default(uuid())
  lockfile_id    String
  lockfile       Lockfile  @relation(fields: [lockfile_id], references: [id])
  project_id     String?
  project        Project?  @relation(fields: [project_id], references: [id])
  release_id     String?
  release        Release?  @relation(fields: [release_id], references: [id])
  name           String
  version        String
  major          Int?
  minor          Int?
  patch          Int?
  prerelease     Boolean?
  suffix         String?
  major_outdated Boolean?
  minor_outdated Boolean?
  patch_outdated Boolean?
  synced         DateTime?

  @@map("dependencies")
}

enum EcosystemName {
  rubygems
  npm
  cocoapods
}

enum LockfileType {
  gemfile
  yarn
  npm
  podlock
}
